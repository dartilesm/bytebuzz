{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "users_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "join_date": {
          "name": "join_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_username_key": {
          "columns": [
            "username"
          ],
          "nullsNotDistinct": false,
          "name": "users_username_key"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.replies": {
      "name": "replies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "replies_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "post_id": {
          "name": "post_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "parent_reply_id": {
          "name": "parent_reply_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "replies_parent_reply_id_fkey": {
          "name": "replies_parent_reply_id_fkey",
          "tableFrom": "replies",
          "tableTo": "replies",
          "schemaTo": "public",
          "columnsFrom": [
            "parent_reply_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "replies_post_id_fkey": {
          "name": "replies_post_id_fkey",
          "tableFrom": "replies",
          "tableTo": "posts",
          "schemaTo": "public",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "replies_user_id_fkey": {
          "name": "replies_user_id_fkey",
          "tableFrom": "replies",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Any user can see replies": {
          "name": "Any user can see replies",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Users must insert their own replies": {
          "name": "Users must insert their own replies",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users must update their own replies": {
          "name": "Users must update their own replies",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users must delete their own replies": {
          "name": "Users must delete their own replies",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.posts": {
      "name": "posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "posts_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "reply_ids": {
          "name": "reply_ids",
          "type": "bigint[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "posts_user_id_fkey": {
          "name": "posts_user_id_fkey",
          "tableFrom": "posts",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Any user can see posts": {
          "name": "Any user can see posts",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Users must insert their own posts": {
          "name": "Users must insert their own posts",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users must update their own posts": {
          "name": "Users must update their own posts",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users must delete their own posts": {
          "name": "Users must delete their own posts",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.reposts": {
      "name": "reposts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "reposts_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "post_id": {
          "name": "post_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "reply_id": {
          "name": "reply_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "reposts_post_id_fkey": {
          "name": "reposts_post_id_fkey",
          "tableFrom": "reposts",
          "tableTo": "posts",
          "schemaTo": "public",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reposts_reply_id_fkey": {
          "name": "reposts_reply_id_fkey",
          "tableFrom": "reposts",
          "tableTo": "replies",
          "schemaTo": "public",
          "columnsFrom": [
            "reply_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reposts_user_id_fkey": {
          "name": "reposts_user_id_fkey",
          "tableFrom": "reposts",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "reposts_user_id_post_id_reply_id_key": {
          "columns": [
            "user_id",
            "post_id",
            "reply_id"
          ],
          "nullsNotDistinct": false,
          "name": "reposts_user_id_post_id_reply_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Any user can see reposts": {
          "name": "Any user can see reposts",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Users must insert their own reposts": {
          "name": "Users must insert their own reposts",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users must update their own reposts": {
          "name": "Users must update their own reposts",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users must delete their own reposts": {
          "name": "Users must delete their own reposts",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.reactions": {
      "name": "reactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "reactions_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "post_id": {
          "name": "post_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "reply_id": {
          "name": "reply_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "repost_id": {
          "name": "repost_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "reaction_type": {
          "name": "reaction_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "reactions_post_id_fkey": {
          "name": "reactions_post_id_fkey",
          "tableFrom": "reactions",
          "tableTo": "posts",
          "schemaTo": "public",
          "columnsFrom": [
            "post_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reactions_reply_id_fkey": {
          "name": "reactions_reply_id_fkey",
          "tableFrom": "reactions",
          "tableTo": "replies",
          "schemaTo": "public",
          "columnsFrom": [
            "reply_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reactions_repost_id_fkey": {
          "name": "reactions_repost_id_fkey",
          "tableFrom": "reactions",
          "tableTo": "reposts",
          "schemaTo": "public",
          "columnsFrom": [
            "repost_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reactions_user_id_fkey": {
          "name": "reactions_user_id_fkey",
          "tableFrom": "reactions",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "reactions_user_id_post_id_reply_id_repost_id_reaction_type_key": {
          "columns": [
            "user_id",
            "post_id",
            "reply_id",
            "repost_id",
            "reaction_type"
          ],
          "nullsNotDistinct": false,
          "name": "reactions_user_id_post_id_reply_id_repost_id_reaction_type_key"
        }
      },
      "checkConstraints": {
        "reactions_reaction_type_check": {
          "name": "reactions_reaction_type_check",
          "value": "reaction_type = ANY (ARRAY['Like'::text, 'Love'::text, 'Fun'::text, 'Interesting'::text])"
        }
      },
      "policies": {
        "Any user can see reactions": {
          "name": "Any user can see reactions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Users must insert their own reactions": {
          "name": "Users must insert their own reactions",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users must update their own reactions": {
          "name": "Users must update their own reactions",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users must delete their own reactions": {
          "name": "Users must delete their own reactions",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_followers": {
      "name": "user_followers",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "follower_id": {
          "name": "follower_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_followers_follower_id_fkey": {
          "name": "user_followers_follower_id_fkey",
          "tableFrom": "user_followers",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "follower_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_followers_user_id_fkey": {
          "name": "user_followers_user_id_fkey",
          "tableFrom": "user_followers",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_followers_pkey": {
          "name": "user_followers_pkey",
          "columns": [
            "user_id",
            "follower_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "posts": {
        "columns": {
          "reply_ids": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "bigint"
          }
        }
      }
    }
  }
}